const fs = require('fs');
const path = require('path');
const { TextInputBuilder, ActionRowBuilder, ModalBuilder, TextInputStyle, EmbedBuilder, MessageFlags } = require('discord.js');


const handleUserSetupError = async (interaction) => {
    await interaction.deferReply({ flags: MessageFlags.Ephemeral });
    const Embed_error = new EmbedBuilder()
        .setColor(0xFF0033)
        .setTitle('\`\`‚ùå\`\` ‡πÄ‡∏≠‡πâ‡∏∞! ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô!');
    await interaction.editReply({ embeds: [Embed_error] });
};


const MedmwngPath = () => {

    const medmwng_id_Path = path.resolve(__dirname, 'user.json');
    let medmwng_config_id = {};

    if (fs.existsSync(medmwng_id_Path)) {
        try {
            const data = fs.readFileSync(medmwng_id_Path, 'utf-8');
            if (data) {
                medmwng_config_id = JSON.parse(data);
            }
        } catch (error) {
            console.error("Error parsing JSON: ", error);
        }
    } else {
        fs.writeFileSync(medmwng_id_Path, JSON.stringify({}));
    }

    if (typeof medmwng_config_id !== 'object' || medmwng_config_id === null) {
        medmwng_config_id = {};
    }

    return medmwng_config_id;
}

module.exports = {
    name: 'interactionCreate',
    async execute(regularbot, interaction) {
        try {

            if (interaction.isButton() && interaction.customId === "set_id_token") {

                const medmwng_id = interaction.user.id;
                const medmwng_config_id = MedmwngPath();

                const modal = new ModalBuilder()
                    .setCustomId('id_token__modal')
                    .setTitle('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö')
                    .addComponents(
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('medmwng_token')
                                .setLabel('[ TOKEN ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('TOKEN ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô')
                                .setRequired(true)
                                .setValue(medmwng_config_id[medmwng_id]?.token || 'TOKEN')
                        ),
                    );
                await interaction.showModal(modal);

            } else if (interaction.isButton() && interaction.customId === "set_name_status") {


                const medmwng_id = interaction.user.id;
                const medmwng_config_id = MedmwngPath();


                if (!medmwng_config_id[interaction.user.id]?.token) {
                    await handleUserSetupError(interaction);
                    return;
                }

                const modal = new ModalBuilder()
                    .setCustomId('status_a1_modal')
                    .setTitle('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å')
                    .addComponents(
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('status_a1')
                                .setLabel('[ üí¨‡∏ä‡∏∑‡πà‡∏≠‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.Details1)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('status_a2')
                                .setLabel('[ üí¨‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.Statetext1)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('status_a3')
                                .setLabel('[ üí¨‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.State1)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('image_a1')
                                .setLabel('[ üîó‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏ç‡πà ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å URL ‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏ç‡πà')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.LargeImage1)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('image_a2')
                                .setLabel('[ üîó‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏•‡πá‡∏Å ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å URL ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.SmallImage1)
                        ),

                    );
                await interaction.showModal(modal);

            } else if (interaction.isButton() && interaction.customId === "set_nametwo_status") {

                const medmwng_id = interaction.user.id;
                const medmwng_config_id = MedmwngPath();


                if (!medmwng_config_id[interaction.user.id]?.token) {
                    await handleUserSetupError(interaction);
                    return;
                }

                const modal = new ModalBuilder()
                    .setCustomId('status_b2_modal')
                    .setTitle('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏≠‡∏á')

                    .addComponents(
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('status_b1')
                                .setLabel('[ üí¨‡∏ä‡∏∑‡πà‡∏≠‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.Details2)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('status_b2')
                                .setLabel('[ üí¨‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.Statetext2)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('status_b3')
                                .setLabel('[ üí¨‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏•‡∏±‡∏ö‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.State2)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('image_b1')
                                .setLabel('[ üîó‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏ç‡πà ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å URL ‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏ç‡πà')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.LargeImage2)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('image_b2')
                                .setLabel('[ üîó‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏•‡πá‡∏Å ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å URL ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.SmallImage2)
                        ),
                    );
                await interaction.showModal(modal);
            } else if (interaction.isButton() && interaction.customId === "set_button_b1") {

                const medmwng_id = interaction.user.id;
                const medmwng_config_id = MedmwngPath();


                if (!medmwng_config_id[interaction.user.id]?.token) {
                    await handleUserSetupError(interaction);
                    return;
                }

                const modal = new ModalBuilder()
                    .setCustomId('button_b_modal')
                    .setTitle('‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏° ‡πÅ‡∏•‡∏∞ ‡∏•‡∏¥‡∏á‡∏Ñ‡πå')
                    .addComponents(
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('button_b1')
                                .setLabel('[ üí¨‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏ô‡∏∂‡πà‡∏á ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.Button1)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('link_button_b1')
                                .setLabel('[ üîó‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏ô‡∏∂‡πà‡∏á ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å URL ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.Link_Button1)

                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('button_b2')
                                .setLabel('[ üí¨‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.Button2)
                        ),
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('link_button_b2')
                                .setLabel('[ üîó‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('‡∏Å‡∏£‡∏≠‡∏Å URL ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ - ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ')
                                .setRequired(false)
                                .setValue(medmwng_config_id[medmwng_id]?.Link_Button2)
                        ),
                    );
                await interaction.showModal(modal);
            } else if (interaction.isButton() && interaction.customId === "set_link_ming") {

                const medmwng_id = interaction.user.id;
                const medmwng_config_id = MedmwngPath();


                if (!medmwng_config_id[interaction.user.id]?.token) {
                    await handleUserSetupError(interaction);
                    return;
                }

                const modal = new ModalBuilder()
                    .setCustomId('link_ming_modal')
                    .setTitle('‡∏ï‡∏±‡πâ‡∏á‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏™‡∏ï‡∏£‡∏µ‡∏°‡∏°‡∏¥‡πà‡∏á')
                    .addComponents(
                        new ActionRowBuilder().addComponents(
                            new TextInputBuilder()
                                .setCustomId('link_ming')
                                .setLabel('[ üîó‡∏ï‡∏±‡πâ‡∏á‡∏•‡∏¥‡∏á‡∏Ñ‡πå URL ‡∏™‡∏ï‡∏£‡∏µ‡∏°‡∏°‡∏¥‡πà‡∏á ]')
                                .setStyle(TextInputStyle.Short)
                                .setPlaceholder('https://www.twitch.tv/Anime')
                                .setRequired(true)
                                .setValue(medmwng_config_id[medmwng_id]?.stream_URL)
                        ),
                    );
                await interaction.showModal(modal);
            }

        } catch (error) {
            console.error('Error Setting Status Modals', error);
        }
    }
};
